// <auto-generated />
using System;
using Core.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(ZeddelkaschdeContext))]
    [Migration("20250312220021_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Core.DataTypes.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZeddelContentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ZeddelContentId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Core.DataTypes.FachData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KaschdeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ZeddelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KaschdeId");

                    b.HasIndex("ZeddelId");

                    b.ToTable("FachData");
                });

            modelBuilder.Entity("Core.DataTypes.Kaschde", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KaschdeList");
                });

            modelBuilder.Entity("Core.DataTypes.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ZeddelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ZeddelId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Core.DataTypes.Zeddel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("ZeddelList");
                });

            modelBuilder.Entity("Core.DataTypes.ZeddelContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ZeddelContents");
                });

            modelBuilder.Entity("Core.DataTypes.Attachment", b =>
                {
                    b.HasOne("Core.DataTypes.ZeddelContent", "ZeddelContent")
                        .WithMany("Attachments")
                        .HasForeignKey("ZeddelContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZeddelContent");
                });

            modelBuilder.Entity("Core.DataTypes.FachData", b =>
                {
                    b.HasOne("Core.DataTypes.Kaschde", null)
                        .WithMany("Fach")
                        .HasForeignKey("KaschdeId");

                    b.HasOne("Core.DataTypes.Zeddel", "Zeddel")
                        .WithMany()
                        .HasForeignKey("ZeddelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zeddel");
                });

            modelBuilder.Entity("Core.DataTypes.Topic", b =>
                {
                    b.HasOne("Core.DataTypes.Zeddel", null)
                        .WithMany("Topics")
                        .HasForeignKey("ZeddelId");
                });

            modelBuilder.Entity("Core.DataTypes.Zeddel", b =>
                {
                    b.HasOne("Core.DataTypes.ZeddelContent", "Answer")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.DataTypes.ZeddelContent", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Core.DataTypes.Kaschde", b =>
                {
                    b.Navigation("Fach");
                });

            modelBuilder.Entity("Core.DataTypes.Zeddel", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("Core.DataTypes.ZeddelContent", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
